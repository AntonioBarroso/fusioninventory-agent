#!/usr/bin/perl

use strict;
use warnings;
use lib './lib';

use Cwd;
use English qw(-no_match_vars);
use Getopt::Long;
use Pod::Usage;
use Proc::Daemon;
use Proc::PID::File;

use FusionInventory::Agent;

my %setup = (
    confdir => './etc',
    datadir => './share',
    libdir  => './lib',
    vardir  => './var',
);

my $options = {};

Getopt::Long::Configure( "no_ignorecase" );
GetOptions(
    $options,
    # executable options
    'conf-file=s',
    'config=s',
    'pidfile=s',
    'no-fork',
    'help|h',
    # agent configuration options
    'ca-cert-dir=s',
    'ca-cert-file=s',
    'color',
    'debug+',
    'logger=s',
    'logfile=s',
    'logfile-maxsize=i',
    'no-httpd',
    'no-ssl-check',
    'no-module=s',
    'password|p=s',
    'proxy|P=s',
    'httpd-ip=s',
    'httpd-port=s',
    'httpd-trust=s',
    'server|s=s',
    'timeout=i',
    'user|u=s',
) or pod2usage(-verbose => 0);

pod2usage(-verbose => 0, -exitstatus => 0) if $options->{help};

if ($options->{'conf-file'}) {
    if ($options->{config}) {
        if ($options->{config} ne 'file') {
            print STDERR
                "don't use --conf-file with $options->{config} backend";
            exit 1;
        }
    } else {
        $options->{config} = 'file';
    }
}

my $config = FusionInventory::Agent::Config->new(
    confdir => $setup{confdir},
    options => $options,
);

my $verbosity =
    $options->{debug} == 0 ? LOG_INFO   :
    $options->{debug} == 1 ? LOG_DEBUG  :
    $options->{debug} == 2 ? LOG_DEBUG2 :
                             LOG_DEBUG2 ;

my $logger = FusionInventory::Agent::Logger->new(
    config    => $config,
    backends  => $config->{logger},
    verbosity => $verbosity
);

my $agent = FusionInventory::Agent->new(
    config => $config,
    logger => $logger,
    %setup
);

eval {
    # initialize agent
    $agent->init(options => $options, server => 1);

    # daemonize agent
    my $pidfile  = $options->{pidfile} ||
                   $setup{vardir} . '/fusioninventory.pid';

    my $pid = Proc::PID::File->new();
    $pid->{path} = $pidfile;

    if ($pid->alive()) {
        $agent->{logger}->error("An agent is already running, exiting...");
        exit 1;
    }

    if (!$options->{'no-fork'}) {

        # If we use relative path, we must stay in the current directory
        my $workdir = substr($setup{libdir}, 0, 1) eq '/' ? '/' : getcwd();

        Proc::Daemon::Init({
            work_dir => $workdir,
            pid_file => $pidfile
        });

        $agent->{logger}->debug("Agent daemonized");
    }

    # run infinite loop
    $agent->run();
};

if ($EVAL_ERROR) {
    print STDERR "Execution failure:.\n";
    print STDERR $EVAL_ERROR;
    exit 1;
}

exit(0);

__END__

=head1 NAME

fusioninventory-daemon - FusionInventory agent daemon for Unix

=head1 SYNOPSIS

B<fusioninventory-daemon>
S<[B<--config> I<string>]>
S<[B<--conf-file> I<file>]>
S<[B<--no-fork>]>
S<[B<--pidfile> I<file>]>
S<[B<--server> I<url>]>
S<[B<--no-module> I<string>]>
S<[B<--proxy> I<url>]>
S<[B<--user> I<string>]>
S<[B<--password> I<string>]>
S<[B<--ca-cert-dir> I<directory>]>
S<[B<--ca-cert-file> I<file>]>
S<[B<--no-ssl-check>]>
S<[B<--timeout> I<time>]>
S<[B<--logger> I<string>]>
S<[B<--logfile> I<file>]>
S<[B<--logfile-maxsize> I<integer>]>
S<[B<--logfacility> I<string>]>
S<[B<--color>]>
S<[B<--no-httpd>]>
S<[B<--httpd-ip> I<address>]>
S<[B<--httpd-port> I<integer>]>
S<[B<--httpd-trust> I<address>]>

=head1 DESCRIPTION

This executable allows to run the agent in managed mode on a Unix system: the
agent runs continuously in the background, wakes up periodically to contact
its server and execute required tasks. It may also be contacted out of schedule
by the server, through its web interface.

=head1 OPTIONS

=head2 Executable-specific options

Those options can be passed on command-line only.

=over

=item B<--config>=I<BACKEND>

Configuration backend to use.

The available backends are:

=over 4

=item

file: read configuration from a file (default anywhere else as Windows).

=item

registry: read configuration from the registry (default on Windows).

=item

none: don't read any configuration.

=back

=item B<--conf-file>=I<FILE>

Use I<FILE> as configuration file (implies file configuration backend).

=item B<--no-fork>

Don't fork in background.

=item B<--pidfile>=I<FILE>

Store pid in I<FILE>.

=back

=head2 Agent configuration options

Those options can be passed on command-line to override values found in
configuration file.

=over

=item B<-s>, B<--server>=I<URI>

Set B<server> option, see L<agent.cfg> for details.

=item B<--no-module>=I<MODULE>

Set B<no-module> option, see L<agent.cfg> for details.

=item B<-P>, B<--proxy>=I<PROXY>

Set B<proxy> option, see L<agent.cfg> for details.

=item B<-u> I<USER>, B<--user>=I<USER>

Set B<user> option, see L<agent.cfg> for details.

=item B<-p>, B<--password>=I<PASSWORD>

Set B<password> option, see L<agent.cfg> for details.

=item B<--ca-cert-dir>=I<DIRECTORY>

Set B<ca-cert-dir> option, see L<agent.cfg> for details.

=item B<--ca-cert-file>=I<FILE>

Set B<ca-cert-file> option, see L<agent.cfg> for details.

=item B<--no-ssl-check>

Set B<no-ssl-check> option, see L<agent.cfg> for details.

=item B<--timeout>=I<TIME>

Set B<timeout> option, see L<agent.cfg> for details.

=item B<--logger>=I<BACKEND>

Set B<logger> option, see L<agent.cfg> for details.

=item B<--logfile>=I<FILE>

Set B<logfile> option, see L<agent.cfg> for details.

=item B<--logfile-maxsize>=I<SIZE>

Set B<logfile-maxsize> option, see L<agent.cfg> for details.

=item B<--logfacility>=I<FACILITY>

Set B<logfacility> option, see L<agent.cfg> for details.

=item B<--color>

Set B<color> option, see L<agent.cfg> for details.

=item B<--debug>

Set B<debug> option, see L<agent.cfg> for details.

=item B<--no-httpd>

Set B<no-httpd> option, see L<agent.cfg> for details.

=item B<--httpd-ip>=I<IP>

Set B<httpd-ip> option, see L<agent.cfg> for details.

=item B<--httpd-port>=I<PORT>

Set B<httpd-port> option, see L<agent.cfg> for details.

=item B<--httpd-trust>=I<IP>

Set B<httpd-trust> option, see L<agent.cfg> for details.

=back
