#!/usr/bin/perl

use strict;
use warnings;
use lib './lib';

use English qw(-no_match_vars);
use Getopt::Long;
use Pod::Usage;

use FusionInventory::Agent;
use FusionInventory::Agent::Config;
use FusionInventory::Agent::Logger;
use FusionInventory::Agent::Target;
use FusionInventory::Agent::Task::NetDiscovery;

my $options = {
    debug   => 0,
    threads => 1
};

my %setup = (
    confdir => './etc',
    datadir => './share',
    libdir  => './lib',
    vardir  => './var',
);

GetOptions(
    $options,
    'directory=s',
    'server=s',
    'first=s',
    'last=s',
    'community=s@',
    'credential=s',
    'credentials=s@',
    'entity=s',
    'threads=i',
    'timeout=i',
    'debug+',
    'help',
) or pod2usage(-verbose => 0);

pod2usage(-verbose => 0, -exitval => 0) if $options->{help};

pod2usage(
    -message => "--first option is deprecated, use regular argument instead\n",
    -verbose => 0
) if $options->{first};

pod2usage(
    -message => "--last option is deprecated, use regular argument instead\n",
    -verbose => 0
) if $options->{last};

pod2usage(
    -message => "--community option is deprecated, use --credentials instead\n",
    -verbose => 0
) if $options->{community};

pod2usage(
    -message => "--credential option has been renamed to --credentials\n",
    -verbose => 0
) if $options->{credential};

pod2usage(
    -message => "no network given, aborting\n", -verbose => 0
) unless @ARGV;

my $config = FusionInventory::Agent::Config->new(
    confdir => $setup{confdir},
    options => $options,
);

my $logger = FusionInventory::Agent::Logger->new(
    config => $config
);

my $agent = FusionInventory::Agent->new(
    config => $config,
    logger => $logger,
    setup  => \%setup
);

my $task = FusionInventory::Agent::Task::NetDiscovery->new(
    logger   => $logger,
    datadir  => $setup{datadir},
    confdir  => $setup{confdir},
    deviceid => 'foo'
);

my $block_id = 1;
my @blocks;
foreach my $arg (@ARGV) {
    my $block;
    foreach my $parameter (split(',', $arg)) {
        my ($key, $value) = split(':', $parameter);
        if (!$value) {
            $block->{spec} = $key;
        } else {
            $block->{$key} = $value;
        }
    }
    $block->{id}     = $block_id++ unless $block->{id};
    $block->{entity} = $options->{entity} if $options->{entity};
    push @blocks, $block;
}

my $credentials_id = 1;
my @credentials;
if ($options->{credentials}) {
    foreach my $specification (@{$options->{credentials}}) {
        my $credentials = { id => $credentials_id++ };
        foreach my $parameter (split(',', $specification)) {
            my ($key, $value) = split(':', $parameter);
            $credentials->{$key} = $value;
        }
        push @credentials, $credentials;
    }
} else {
    push @credentials, {
        id => $credentials_id++, version => '2c', community => 'public'
    };
}

$task->configure(
    pid         => 1,
    threads     => $options->{threads},
    timeout     => $options->{timeout},
    blocks      => \@blocks,
    snmp_credentials => \@credentials,
);

my $target = FusionInventory::Agent::Target->create(
    url    => $options->{server},
    path   => $options->{directory},
    logger => $logger,
);

$task->run(target => $target);

__END__

=head1 NAME

fusioninventory-netdiscovery - Standalone network discovery

=head1 SYNOPSIS

B<fusioninventory-netdiscovery>
S<[B<--credentials> I<string>]> S<[B<--timeout> I<integer>]>
S<[B<--threads> I<integer>]> S<[B<--entity> I<string>]>
S<[B<--directory> I<path>]> S<[B<--server> I<url>]>
S<[B<--debug>]>
I<network> S<[I<network> ...]>

=head1 DESCRIPTION

F<fusioninventory-netdiscovery> allows to run a network discovery task without a
GLPI server.

=head1 OPTIONS

=over

=item B<--credentials> I<string>

SNMP credentials (default: version:2c,community:public)

=item B<--timeout> I<integer>

SNMP timeout (default: 1s)

=item B<--threads> I<integer>

threads number (default: 1)

=item B<--entity> I<string>

GLPI entity

=item B<--directory> I<path>

directory target path

=item B<--server> I<url>

server target url

=item B<--debug>

debug output

=back

=head1 EXAMPLES

    $> fusioninventory-netdiscovery 192.168.1.0/24
    $> fusioninventory-netdiscovery 192.168.1.1-192.168.1.254
    $> fusioninventory-netdiscovery 192.168.1.0/24
        --directory /tmp
    $> fusioninventory-netdiscovery 192.168.1.0/24
        --server http://glpi.domain.com/plugins/fusioninventory/
    $> fusioninventory-netdiscovery 192.168.1.0/24
        --credential version:1,community:public
        --credential version:3,username:foo,authprotocol:sha1,authpassword:bar
    $> fusioninventory-netdiscovery 192.168.1.0/24 192.168.2.0/24
