#!/usr/bin/perl

use strict;
use warnings;
use lib './lib';

use English qw(-no_match_vars);
use Getopt::Long;
use Pod::Usage;

use FusionInventory::Agent;
use FusionInventory::Agent::Config;
use FusionInventory::Agent::Logger;

my %setup = (
    confdir => './etc',
    datadir => './share',
    libdir  => './lib',
    vardir  => './var',
);

my $options = {
    'conf-file' => $setup{confdir} . '/agent.cfg',
};

Getopt::Long::Configure( "no_ignorecase" );
GetOptions(
    $options,
    # executable-specific options
    'lazy',
    'list-modules',
    'list-servers',
    'setup',
    'wait|w=s',
    'version',
    'help|h',
    'conf-file=s',
    'config=s',
    # agent configuration options
    'server|s=s',
    'tag|t=s',
    'http-ca-cert-dir=s',
    'http-ca-cert-file=s',
    'http-no-ssl-check',
    'http-password=s',
    'http-proxy=s',
    'http-timeout=i',
    'http-user=s',
    'logger-backend=s',
    'logger-file=s',
    'logger-verbosity=s',
    'logger-maxsize=i',
    # deprecated options
    'color',
    'debug+',
    'delaytime=s',
    'html',
    'force|f',
    'local|l=s',
    'list-tasks',
    'no-task=s',
    'daemon|d',
    'no-fork',
    'no-httpd',
    'pidfile=s',
    'httpd-ip=s',
    'httpd-port=s',
    'httpd-trust=s',
    'logger=s',
    'logfile=s',
    'logfile-maxsize=i',
    'additional-content=s',
    'backend-collect-timeout=s',
    'no-category=s',
    'scan-homedirs',
    'scan-profiles',
    'no-p2p',
    'ca-cert-dir=s',
    'ca-cert-file=s',
    'no-ssl-check',
    'password=s',
    'proxy=s',
    'timeout=i',
    'user=s',
) or pod2usage(-verbose => 0);

pod2usage(-verbose => 0, -exitstatus => 0) if $options->{help};

if ($options->{version}) {
    print $FusionInventory::Agent::VERSION_STRING . "\n";
    exit 0;
}

foreach my $option (qw/daemon no-fork no-httpd pidfile httpd-id httpd-port httpd-trust/) {
    next unless $options->{$option};
    print STDERR
        "option --$option is deprecated, used fusioninventory-daemon instead\n";
    exit 1;
}

foreach my $option (qw/no-category scan-homedirs scan-profiles backend-collect-timeout additional-content no-p2p/) {
    next unless $options->{$option};
    print STDERR
        "module-specific option --$option is deprecated, use either configuration file or dedicated executable\n";
}

if ($options->{setup}) {
    foreach my $key (keys %setup) {
        print "$key: $setup{$key}\n";
    }
    exit 0;
}

my $config = FusionInventory::Agent::Config->create(
    backend => $options->{'config'},
    file    => $options->{'conf-file'},
    options   => {
        _ => {
            'server'       => $options->{'server'},
            'tag'          => $options->{'tag'},
        },
        http => {
            'ca-cert-dir'  => $options->{'ca_cert_dir'},
            'ca-cert-file' => $options->{'ca_cert_file'},
            'no-ssl-check' => $options->{'no-ssl-check'},
            'password'     => $options->{'password'},
            'proxy'        => $options->{'proxy'},
            'timeout'      => $options->{'timeout'},
            'user'         => $options->{'user'},
        },
        logger => {
            'backend'      => $options->{'logger-backend'},
            'file'         => $options->{'logger-file'},
            'maxsize'      => $options->{'logger-maxsize'},
            'verbosity'    => $options->{'logger-verbosity'},
        }
    }
);

my $logger = FusionInventory::Agent::Logger->create(
    backend   => $config->{logger}->{backend},
    file      => $config->{logger}->{file},
    maxsize   => $config->{logger}->{maxsize},
    facility  => $config->{logger}->{facility},
    verbosity => $config->{logger}->{verbosity},
);

my $agent = FusionInventory::Agent->new(
    config => $config,
    logger => $logger,
    setup  => \%setup
);

eval {
    $agent->init();
    $agent->initModules();
    $agent->initControllers();
    $agent->initHandlers();
};

if ($EVAL_ERROR) {
    $agent->{logger}->error("Initialization failure, aborting: $EVAL_ERROR");
    exit 1;
}

if ($options->{'list-tasks'}) {
    print STDERR
        "--list-tasks is deprecated, use --list-modules instead\n";
    $options->{'list-modules'} = 1;
}

if ($options->{'list-modules'}) {
    my %modules = $agent->getModules();
    foreach my $module (keys %modules) {
        print "$module (v$modules{$module})\n";
    }
    exit 0;
}

if ($options->{'list-servers'}) {
    my @controllers = $agent->getControllers();
    foreach my $controller (@controllers) {
        print "$controller->{id} ($controller->{url})\n";
    }
    exit 0;
}

eval {
    die "no module available\n" unless $agent->getModules();
    die "no server defined\n" unless $agent->getControllers();
};

if ($EVAL_ERROR) {
    $agent->{logger}->error("Initialization failure, aborting: $EVAL_ERROR");
    exit 1;
}

if ($options->{wait}) {
    my $time = int rand($options->{wait});
    sleep $time;
}

eval {
    $agent->handleControllers(fork => 0, force => $options->{lazy} ? 0 : 1);
};

if ($EVAL_ERROR) {
    $agent->{logger}->error("Execution failure, exiting: $EVAL_ERROR");
    exit 1;
}

exit(0);

__END__

=head1 NAME

fusioninventory-agent - FusionInventory agent

=head1 SYNOPSIS

B<fusioninventory-agent>
S<[B<--config> I<string>]>
S<[B<--conf-file> I<path>]>
S<[B<--lazy>]>
S<[B<--wait> I<integer>]>
S<[B<--server> I<url>]>
S<[B<--tag> I<string>]>
S<[B<--http-proxy> I<url>]>
S<[B<--http-user> I<string>]>
S<[B<--http-password> I<string>]>
S<[B<--http-ca-cert-dir> I<path>]>
S<[B<--http-ca-cert-file> I<path>]>
S<[B<--http-no-ssl-check>]>
S<[B<--http-timeout> I<integer>]>
S<[B<--logger-backend> I<string>]>
S<[B<--logger-file> I<path>]>
S<[B<--logger-maxsize> I<integer>]>
S<[B<--logger-verbosity> I<string>]>

B<fusioninventory-agent> B<--list-modules>

B<fusioninventory-agent> B<--list-servers>

B<fusioninventory-agent> B<--setup>

=head1 DESCRIPTION

This executable allows to run the agent in half-managed mode: the agent contact
its server immediatly, executes required tasks, and stops.

=head1 OPTIONS

=head2 Executable-specific options

Those options can be passed on command-line only.

=over

=item B<--config> I<string>

Configuration backend to use (default: file).

The available backends are:

=over 4

=item

file: read configuration from a file

=item

registry: read configuration from the registry

=item

none: don't read any configuration.

=back

=item B<--conf-file> I<path>

configuration file path (with file backend)

=item B<--lazy>

Do not contact the target before next scheduled time.

=item B<-w>, B<--wait> I<integer>

Wait a random delay whose value is computed randomly between 0 and LIMIT
seconds, before execution. This is useful when execution is triggered from some
kind of system scheduling on multiple clients, to spread the server load.

=item B<--list-modules>

List available modules and exit

=item B<--list-servers>

List defined servers and exit

=item B<--setup>

Print the agent setup directories and exit.

=item B<--version>

Print the version and exit.

=back

=head2 Agent configuration options

Those options can be passed on command-line to override values found in
configuration file.

=over

=item B<-s>, B<--server> I<url>

Set B<server> option, see L<agent.cfg> for details.

=item B<-t>, B<--tag> I<string>

Set B<tag> option, see L<agent.cfg> for details.

=item B<--http-proxy> I<url>

Set B<http/proxy> option, see L<agent.cfg> for details.

=item B<--http-user> I<string>

Set B<http/user> option, see L<agent.cfg> for details.

=item B<--http-password> I<string>

Set B<http/password> option, see L<agent.cfg> for details.

=item B<--http-ca-cert-dir> I<path>

Set B<http/ca-cert-dir> option, see L<agent.cfg> for details.

=item B<--http-ca-cert-file> I<path>

Set B<http/ca-cert-file> option, see L<agent.cfg> for details.

=item B<--http-no-ssl-check>

Set B<http/no-ssl-check> option, see L<agent.cfg> for details.

=item B<--http-timeout> I<integer>

Set B<http/timeout> option, see L<agent.cfg> for details.

=item B<--logger-backend> I<string>

Set B<logger/backend> option, see L<agent.cfg> for details.

=item B<--logger-file> I<path>

Set B<logger/file> option, see L<agent.cfg> for details.

=item B<--logger-maxsize> I<integer>

Set B<logger/maxsize> option, see L<agent.cfg> for details.

=item B<--logger-verbosity> I<string>

Set B<logger/verbosity> option, see L<agent.cfg> for details.

=back
