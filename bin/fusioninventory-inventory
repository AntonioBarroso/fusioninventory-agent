#!/usr/bin/perl

use strict;
use warnings;
use lib './lib';

use English qw(-no_match_vars);
use Getopt::Long;
use File::Temp;
use Pod::Usage;

use FusionInventory::Agent;
use FusionInventory::Agent::Config;
use FusionInventory::Agent::Logger;
use FusionInventory::Agent::Target;
use FusionInventory::Agent::Task::Inventory;

my %setup = (
    confdir => './etc',
    datadir => './share',
    libdir  => './lib',
    vardir  => './var',
);

my $options = {
    'conf-file' => $setup{confdir} . '/agent.cfg',
};

GetOptions(
    $options,
    'config=s',
    'conf-file=s',
    'target=s',
    'additional-content=s',
    'timeout=s',
    'no-category=s@',
    'scan-homedirs',
    'scan-profiles',
    'tag|t=s',
    'logger-verbosity=s',
    'help',
    # deprecated options
    'backend-collect-timeout=s',
    'debug+',
) or pod2usage(-verbose => 0);

pod2usage(-verbose => 0, -exitval => 0) if $options->{help};

my $config = FusionInventory::Agent::Config->create(
    backend => $options->{config},
    file    => $options->{'conf-file'},
    options => {
        _ => {
            tag => $options->{tag}
        },
        logger => {
            verbosity => $options->{'logger-verbosity'}
        },
    }
);

my $logger = FusionInventory::Agent::Logger->create(
    backend   => $config->{logger}->{backend},
    file      => $config->{logger}->{file},
    maxsize   => $config->{logger}->{maxsize},
    facility  => $config->{logger}->{facility},
    verbosity => $config->{logger}->{verbosity},
);

my $agent = FusionInventory::Agent->new(
    config => $config,
    logger => $logger,
    setup  => \%setup
);
$agent->init();
$agent->initHandlers();

my $task = FusionInventory::Agent::Task::Inventory->new(
    logger => $logger,
);

$task->configure(
    tag                => $options->{'tag'},
    timeout            => $options->{'timeout'},
    additional_content => $options->{'additional-content'},
    scan_homedirs      => $options->{'scan-homedirs'},
    scan_profiles      => $options->{'scan-profiles'},
    no_category        => $options->{'no-category'},
);

my $target = FusionInventory::Agent::Target->create(
    spec   => $options->{target},
    logger => $logger,
    config => $config,
);

$agent->executeTask(task => $task, target =>  $target);

__END__

=head1 NAME

fusioninventory-inventory - Standalone inventory

=head1 SYNOPSIS

B<fusioninventory-inventory>
S<[B<--config> I<string>]>
S<[B<--conf-file> I<path>]>
S<[B<--target> I<string>]>
S<[B<--additional-content> I<path>]> S<[B<--no-category> I<string>]>
S<[B<--scan-homedirs>]> S<[B<--scan-profiles>]>
S<[B<--timeout> I<integer>]> S<[B<--tag> I<string>]>
S<[B<--logger-verbosity> I<string>]>

=head1 DESCRIPTION

F<fusioninventory-inventory> allows to run an inventory task without a GLPI
server.

=head1 OPTIONS

=over

=item B<--config> I<string>

Configuration backend to use (default: file).

The available backends are:

=over 4

=item

file: read configuration from a file

=item

registry: read configuration from the registry

=item

none: don't read any configuration.

=back

=item B<--conf-file> I<path>

configuration file path (with file backend)

=item B<--target> I<string>

target path (for directory) or url (for server)

=item B<--timeout> I<integer>

execution timeout (default: 30s)

=item B<--additional-content> I<path>

additional inventory content file

=item B<--no-category> I<string>

exclude specific inventory section

=item B<--scan-homedirs>

scan user home directories (false)

=item B<--scan-profiles>

scan user profiles (false)

=item B<--logger-verbosity> I<string>

Set B<logger/verbosity> option, see L<agent.cfg> for details.

=item B<--tag> I<string>

Set B<tag> option, see L<agent.cfg> for details.

=back

=head1 EXAMPLES

Execute an inventory of local host, sending the results to stdout:

    $> fusioninventory-inventory

Execute an inventory of local host, sending the results to a directory:

    $> fusioninventory-inventory --target /tmp

Execute an inventory of local host, sending the results to a server

    $> fusioninventory-inventory \
        --target http://glpi.domain.com/plugins/fusioninventory

Execute an inventory of local host, skipping printers and softwares, sending
the results to stdout:

    $> fusioninventory-inventory --no-category printers --no-category softwares

Execute an inventory of local host, adding the result of a local XML file,
sending the results to stdout:

    $> fusioninventory-inventory --additional-content override.xml
