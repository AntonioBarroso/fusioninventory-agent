#!/usr/bin/perl

use strict;
use warnings;

use lib './lib';
use setup;

use English qw(-no_match_vars);
use Getopt::Long;
use File::Temp;
use Pod::Usage;
use JSON::PP;

use FusionInventory::Agent::Task::Inventory;
use FusionInventory::Agent::Target::Local;
use FusionInventory::Agent::Logger;
use FusionInventory::Agent::Config;
use FusionInventory::Agent::Version;

my $options = {};

GetOptions(
    $options,
    'help',
    'version',
) or pod2usage(-verbose => 0);

if ($options->{version}) {
    my $PROVIDER = $FusionInventory::Agent::Version::PROVIDER;
    map { print $_."\n" }
        "$PROVIDER Inventory task $FusionInventory::Agent::Task::Inventory::VERSION",
        "based on $PROVIDER Agent v$FusionInventory::Agent::Version::VERSION",
        @{$FusionInventory::Agent::Version::COMMENTS}
        ;
    exit 0;
}
pod2usage(-verbose => 0, -exitval => 0) if $options->{help};

my $spec = {};
if ($ARGV[0]) {
    eval {
        $spec = decode_json($ARGV[0]);
    };
    die "invalid task specification, invalid JSON syntax\n"
        if $EVAL_ERROR;
    die "invalid task specification, not an hashref\n"
        if ref($spec) ne 'HASH';
};

my $config = FusionInventory::Agent::Config->new();

my $task = FusionInventory::Agent::Task::Inventory->new(
    logger  => FusionInventory::Agent::Logger->new(config => $config),
    datadir => $setup{datadir},
    config  => $config
);

$task->run(%$spec);

__END__

=head1 NAME

fusioninventory-inventory - Standalone inventory

=head1 SYNOPSIS

fusioninventory-inventory [options] [specification]

  Options:
    -h --help print this message and exit
    --version print the task version and exit

=head1 DESCRIPTION

F<fusioninventory-inventory> allows to run an inventory task from command-line.
